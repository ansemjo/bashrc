# distro info
alias distro='uname -nrmo && lsb_release -dc 2> /dev/null'

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"

	alias ls='ls --color=auto'
	alias dir='dir --color=auto'
	alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# some ls aliases
alias l='ls -1F'	# one file per line
alias ll='ls -alF'	# all, long, classify; pretty verbose
alias la='ls -AF'	# almost all; like ls, but with .dot
alias lll='ls -lhARF'	# dirlist, generates huge output for many subfolders!

# display human-readable filesystem sizes
alias dfh='df -h'

# Directory navigation aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

# safety!
# makes these commands interactive,
# i.e. prevents accidental overwrites
alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'
alias rmrf='rm -rf' # read mail really fast :)

# some sudo shorthands
alias si='sudo vi'			# root vim editor
alias sedit='gksudo gedit' # launch gedit with root privileges
alias suu='sudo su'			# become root
alias runlevel='sudo /sbin/init'	# change current runlevel
alias chownr='sudo chown -R'		# recursive chown
alias chmodr='sudo chmod -R'		# recursive chmod
grab() {
  sudo chown -R ${USER} ${1:-.}		# grab ownership
}

# powerdown aliases
alias shutdown!='sudo shutdown -P now'
alias reboot!='sudo reboot -f'

# some standards for slurm
if [ -x /usr/bin/slurm ]; then
  alias ifslurm='slurm -s -t foo -i eth0'
fi

# some fun with cmatrix
if [ -x /usr/bin/cmatrix ]; then
  alias matrix='cmatrix -ab -u2 -C green'
fi

# for when you quickly want to
# output a file with linenumbers
alias can='cat -sn'

# 'zero' the screen
alias 00='clear'

# various grep shorthands
alias igrep='egrep -i'
alias hh='history | igrep '
alias ff='find . | igrep '
alias psgrep='ps aux | igrep '
alias lgrep='l | igrep '
alias dpkgrep='dpkg --list | igrep '

# screen orientation, mainly intended for use on a laptop
if [ -x /usr/bin/xrandr ]; then
  alias ori='xrandr -o'
  alias orio='xrandr -o normal'
fi

# open nautilus here (if system is gnome)
if [ -x /usr/bin/nautilus ]; then
  alias here='nautilus -w --no-desktop `pwd` &> /dev/null &'
fi

# output random characters from urandom
randomchar () {
    case $1 in
        ''|*[!0-9]*) AMM=32 ;;
        *) AMM=$1 ;;
    esac
    < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-$AMM};echo;
}

## some larger functions below
#################################################################

# make and enter
mkcd () {
  if [ ! -n "$1" ]; then
    echo "Enter a directory name"
  elif [ -d $1 ]; then
    echo "\`$1' already exists"
  else
    mkdir $1 && cd $1
  fi
}

# extraction function
extract () {
  if [ -f $1 ] ; then
    case $1 in
	*.tar.bz2)   tar xjf $1		;;
	*.tar.gz)    tar xzf $1		;;
	*.bz2)       bunzip2 $1		;;
	*.rar)       rar x $1		;;
	*.gz)        gunzip $1		;;
	*.tar)       tar xf $1		;;
	*.tbz2)      tar xjf $1		;;
	*.tgz)       tar xzf $1		;;
	*.zip)       unzip $1		;;
	*.Z)         uncompress $1	;;
	*.7z)        7z x $1		;;
	*)           echo "'$1' cannot be extracted via extract()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

#netinfo - shows network information for your system
netinfo ()
{
 echo "--------------- Network Information ---------------"
 /sbin/ifconfig | awk /'inet addr/ {print $2}'
 /sbin/ifconfig | awk /'Bcast/ {print $3}'
 /sbin/ifconfig | awk /'inet addr/ {print $4}'
 /sbin/ifconfig | awk /'HWaddr/ {print $4,$5}'
 myip=`lynx -dump -hiddenlinks=ignore -nolist http://checkip.dyndns.org:8245/ | sed '/^$/d; s/^[ ]*//g; s/[ ]*$//g' `
 echo "${myip}"
 echo "---------------------------------------------------"
}

#dirsize - finds directory sizes and lists them for the current directory
dirsize ()
{
 du -shx * .[a-zA-Z0-9_]* 2> /dev/null | \
 egrep '^ *[0-9.]*[MG]' | sort -n > /tmp/list
 egrep '^ *[0-9.]*M' /tmp/list
 egrep '^ *[0-9.]*G' /tmp/list
 rm -rf /tmp/list
}

# pingscan, preferably show all active IPs on local network
pingscan ()
{
if [ $1 ] ; then
 nmap -sn $1 | grep report | sed -e 's/Nmap scan report for //'
else
 echo "please specify a subnet, like so:   pingscan 192.168.0.*"
fi
}

# led control on the usb armory
led ()
{
  if [ $1 ] ; then
    LED="/sys/class/leds/LED/brightness"
    case $1 in
       manual)	modprobe -r ledtrig-heartbeat	;;
       heart)	modprobe ledtrig-heartbeat	;;
       1)	echo 0 > $LED ;;
       on)	echo 0 > $LED ;;
       0)	echo 1 > $LED ;;
       off)	echo 1 > $LED ;;
       *)	echo "use: 0/off or 1/on as argument, when on manual. otherwise use heart or manual to switch the mode"	;;
    esac
  else
    echo "use: 0/off or 1/on as argument"
  fi
}

# if true loop
whiletrue ()
{
  while true; do "$@"; sleep 1; clear; done;
}

# wait for any keypress
waitkey ()
{
  read -rsp $'Press any key to continue...\n' -n1 key
}

# print color table
colors() {
    local fgc bgc vals seq0

    printf "Color escapes are %s\n" '\e[${value};...;${value}m'
    printf "Values 30..37 are \e[33mforeground colors\e[m\n"
    printf "Values 40..47 are \e[43mbackground colors\e[m\n"
    printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

    # foreground colors
    for fgc in {30..37}; do
        # background colors
        for bgc in {40..47}; do
            fgc=${fgc#37} # white
            bgc=${bgc#40} # black

            vals="${fgc:+$fgc;}${bgc}"
            vals=${vals%%;}

            seq0="${vals:+\e[${vals}m}"
            printf "  %-9s" "${seq0:-(default)}"
            printf " ${seq0}TEXT\e[m"
            printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
        done
        echo; echo
    done
}
